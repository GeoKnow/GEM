/*
 * jassa-ui-angular
 * https://github.com/GeoKnow/Jassa-UI-Angular

 * Version: 0.9.0-SNAPSHOT - 2014-11-13
 * License: MIT
 */
angular.module("ui.jassa",["ui.jassa.tpls","ui.jassa.auto-focus","ui.jassa.blurify","ui.jassa.constraint-list","ui.jassa.facet-tree","ui.jassa.facet-typeahead","ui.jassa.facet-value-list","ui.jassa.jassa-list-browser","ui.jassa.jassa-media-list","ui.jassa.lang-select","ui.jassa.list-search","ui.jassa.pointer-events-scroll-fix","ui.jassa.resizable","ui.jassa.sparql-grid","ui.jassa.template-list"]),angular.module("ui.jassa.tpls",["template/constraint-list/constraint-list.html","template/facet-tree/facet-dir-content.html","template/facet-tree/facet-dir-ctrl.html","template/facet-tree/facet-tree-item.html","template/facet-value-list/facet-value-list.html","template/jassa-list-browser/jassa-list-browser.html","template/jassa-media-list/jassa-media-list.html","template/lang-select/lang-select.html","template/list-search/list-search.html","template/sparql-grid/sparql-grid.html","template/template-list/template-list.html"]),angular.module("ui.jassa.auto-focus",[]).directive("autoFocus",function(a,b){return{link:function(c,d,e){var f=b(e.autoFocus);c.$watch(f,function(b){b===!0&&a(function(){d[0].focus()})}),d.bind("blur",function(){f.assign&&c.$apply(f.assign(c,!1))})}}}),angular.module("ui.jassa.blurify",[]).directive("blurify",["$parse",function(a){return{require:"ngModel",restrict:"A",link:function(b,c,d,e){c.on("focus",function(){e.$render()}),c.on("blur",function(){var e=a(d.ngModel)(b),f=a(d.blurify)(b);if(f){var g=f(e);g&&g.then?g.then(function(a){c.val(a)}):c.val(g)}})}}}]),angular.module("ui.jassa.constraint-list",[]).controller("ConstraintListCtrl",["$scope","$q","$rootScope",function(a,b){var c=function(){if(a.sparqlService&&a.facetTreeConfig){var b=a.facetTreeConfig.getBestLiteralConfig(),c=jassa.sponate.MappedConceptUtils.createMappedConceptBestLabel(b),d=jassa.sponate.LookupServiceUtils.createLookupServiceMappedConcept(a.sparqlService,c);d=new jassa.service.LookupServiceTransform(d,function(a){return a.displayLabel||a.id}),a.constraintLabelsLookupService=new jassa.facete.LookupServiceConstraintLabels(d)}},d=function(){if(a.constraintLabelsLookupService){var c=a.constraintManager?a.constraintManager.getConstraints():[],d=a.constraintLabelsLookupService.lookup(c);b.when(d).then(function(b){var d=_(c).map(function(a){var c=b.get(a),d={constraint:a,label:c};return d});a.constraints=d})}};a.$watch("constraintLabelsLookupService",function(){d()}),a.$watch("facetTreeConfig.getFacetConfig().getConstraintManager()",function(b){a.constraintManager=b,d()},!0),a.$watch("sparqlService",function(){c()}),a.$watch("facetTreeConfig.getBestLiteralConfig()",function(){c()},!0),a.removeConstraint=function(b){a.constraintManager.removeConstraint(b.constraint)}}]).directive("constraintList",function(){return{restrict:"EA",replace:!0,templateUrl:"template/constraint-list/constraint-list.html",transclude:!1,require:"constraintList",scope:{sparqlService:"=",labelService:"=",facetTreeConfig:"=",onSelect:"&select"},controller:"ConstraintListCtrl"}}),angular.module("ui.jassa.facet-tree",[]).controller("FacetTreeDirContentCtrl",["$rootScope","$scope","$q",function(){}]).directive("facetTreeDirContent",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facet-tree/facet-tree-content.html",transclude:!1,require:"facetTree",scope:{sparqlService:"=",facetTreeConfig:"=",plugins:"=",onSelect:"&select"},controller:"FacetTreeDirContentCtrl",compile:function(){return function(){}}}}),angular.module("ui.jassa.facet-tree",["ui.jassa.template-list"]).controller("FacetNodeCtrl",["$scope",function(a){a.$watchCollection("[facet.incoming, facet.outgoing]",function(){var b=a.facet;b&&(a.dirset=b.outgoing?b.outgoing:b.incoming)}),a.$watchCollection("[dirset, dirset.listFilter.getOffset(), dirset.listFilter.getLimit(), dirset.childCountInfo.count]",function(){var b=a.dirset;b&&(b.offset=b.listFilter.getOffset()||0,b.limit=b.listFilter.getLimit()||0,b.pageCount=b.limit?Math.floor(b.childCountInfo.count/b.limit):1,b.currentPage=b.limit?Math.floor(b.offset/b.limit)+1:1)})}]).controller("FacetTreeCtrl",["$rootScope","$scope","$q","$timeout",function(a,b,c){var d=this,e=function(){var a=b.sparqlService&&b.facetTreeConfig;b.facetTreeService=a?jassa.facete.FacetTreeServiceUtils.createFacetTreeService(b.sparqlService,b.facetTreeConfig):null},f=function(){e(),d.refresh()};b.itemsPerPage=[10,25,50,100],b.ObjectUtils=jassa.util.ObjectUtils,b.Math=Math,b.startPath=null;var g="[ObjectUtils.hashCode(facetTreeConfig), startPath]";b.$watch(g,function(){f()},!0),b.$watch("sparqlService",function(){f()}),b.doFilter=function(a,c){var d=b.facetTreeConfig.getFacetTreeState().getPathHeadToFilter(),e=d.get(a);e||(e=new jassa.facete.ListFilter(null,10,0),d.put(a,e)),e.setConcept(c),e.setOffset(0)},d.refresh=function(){if(b.facetTreeService){var a=b.facetTreeService.fetchFacetTree(b.startPath);c.when(a).then(function(a){b.facet=a})}else b.facet=null},b.toggleControls=function(a){var c=b.facetTreeConfig.getPathToTags(),d=c.get(a);d||(d={},c.put(a,d)),d.showControls=!d.showControls},b.toggleCollapsed=function(a){var c=b.facetTreeConfig.getFacetTreeState().getPathExpansions();jassa.util.CollectionUtils.toggleItem(c,a)},b.isEqual=function(a,b){var c=null==a?null==b:a.equals(b);return c},b.setStartPath=function(a){var c=null==a||b.isEqual(b.startPath,a);b.startPath=c?null:a},b.selectIncoming=function(a){if(b.facetTreeConfig){var c=b.facetTreeConfig.getFacetTreeState().getPathToDirection();c.put(a,-1)}},b.selectOutgoing=function(a){if(b.facetTreeConfig){var c=b.facetTreeConfig.getFacetTreeState().getPathToDirection();c.put(a,1)}},b.selectPage=function(a,c){var d=b.facetTreeConfig.getFacetTreeState().getPathHeadToFilter(),e=d.get(a);e||(e=new jassa.facete.ListFilter(null,10,0),d.put(a,e));var f=(c-1)*e.getLimit();e.setOffset(f)}}]).directive("facetTree",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facet-tree/facet-tree-item.html",transclude:!1,require:"facetTree",scope:{sparqlService:"=",facetTreeConfig:"=",plugins:"=",pluginContext:"=",onSelect:"&select"},controller:"FacetTreeCtrl",compile:function(){return function(){}}}}),angular.module("ui.jassa.facet-typeahead",[]).directive("facetTypeahead",["$compile","$q","$parse",function(a,b,c){var d=jassa.sponate,e=jassa.facete,f=function(a){var b=a instanceof e.Path?a:e.Path.parse(a);return b},g=function(a,b){var c;if(!a)throw new Error("No specification for building a list service provided");if("[object String]"===Object.prototype.toString.call(a)){var e=b.store;if(c=e.getListService(a),!c)throw new Error("No collection with name "+a+" found")}else if(a instanceof d.MappedConcept){var f=b.sparqlService;c=jassa.sponate.ListServiceUtils.createListServiceMappedConcept(f,a)}else if(a instanceof d.MappedConceptSource){var g=a.getMappedConcept(),h=a.getSparqlService();c=jassa.sponate.ListServiceUtils.createListServiceMappedConcept(h,g)}else{if(!(a instanceof service.ListService))throw new Error("Unsupported list service type",a);c=a}return c},h=function(a,b,c){var d=[],e=Object.keys(a);return e.forEach(function(e){var g,h,i=a[e],j=i.scope,k=i.modelExpr(j),l=i.pathExpr(j),m=f(l);if(c||"[object String]"!==Object.prototype.toString.call(k)||""===(h=k.trim()))if(k&&k.id){var n=k.id,o=jassa.rdf.NodeFactory.createUri(n);g=new jassa.facete.ConstraintEquals(m,o)}else g=null;else if(b){var p=b(h);g=new jassa.facete.ConstraintConcept(m,p)}else g=new jassa.facete.ConstraintRegex(m,h);g&&d.push(g)}),d},i=function(a,b,c,d,e){this.$scope=a,this.$q=b,this.configExpr=c,this.id=d,this.listServiceExpr=e};return i.prototype.getSuggestions=function(){var a=this.configExpr(this.$scope),b=a.idToModelPathMapping,c=b[this.id];if(!c)throw new Error("Cannot retrieve model-path mapping for facet-typeahead directive with id "+id);var d=c.pathExpr(this.$scope),e=f(d),i=this.listServiceExpr(this.$scope),j=g(i,a),k=a.facetConfig,l=k.getConstraintManager(),m=h(b,a.search);_(m).each(function(a){var b=a.getDeclaredPaths();b.forEach(function(a){var b=l.getConstraintsByPath(a);b.forEach(function(a){l.removeConstraint(a)})}),l.addConstraint(a)});var n=new jassa.facete.FacetValueConceptServiceExact(k),o=n.prepareConcept(e,!1).then(function(a){var b=j.fetchItems(a,10).then(function(a){var b=a.map(function(a){return a.val});return b});return b});return o},{restrict:"A",scope:!0,priority:1001,terminal:!0,compile:function(d,e){this.instanceId||(this.instanceId=0);var f="facetTypeAhead-"+this.instanceId++,g=e.ngModel,j=e.facetTypeahead,k=e.facetTypeaheadPath,l=e.facetTypeaheadSuggestions,m=e.facetTypeaheadLabel,n=e.facetTypeaheadModel;m=m||"id",n=n||"id",console.log("labelAttr",m),console.log("modelAttr",n),d.removeAttr("facet-typeahead"),d.removeAttr("facet-typeahead-path"),d.removeAttr("facet-typeahead-suggestions"),d.removeAttr("facet-typeahead-label"),d.removeAttr("facet-typeahead-model");var o=n?"."+n:"",p="item as item"+o+" for item in facetTypeAheadService.getSuggestions($viewValue)";return d.attr("typeahead",p),d.attr("blurify","labelFn"),{pre:function(a){var d=c(g),e=c(k),n=c(j),o=c(l);a.labelFn=function(b){var c=d(a),e=c?c[m]:null,f=e?e:b;return f},a.$watch(j,function(b,c){c&&c!=b&&c.modelToPathMapping&&delete c.idToModelPathMapping[f],b&&(b.idToModelPathMapping||(b.idToModelPathMapping={}),b.idToModelPathMapping[f]={modelExpr:d,modelExprStr:g,pathExprStr:k,pathExpr:e,scope:a},b.getConstraints=function(a){var c=h(b.idToModelPathMapping,b.search,a);return c})}),a.facetTypeAheadService=new i(a,b,n,f,o)},post:function(b,c){a(c)(b)}}}}}]),angular.module("ui.jassa.facet-value-list",[]).controller("FacetValueListCtrl",["$rootScope","$scope","$q",function(a,b,c){b.filterText="",b.pagination={totalItems:0,currentPage:1,maxSize:5},b.path=null;var d=null,e=function(){var a=b.sparqlService&&b.facetTreeConfig&&b.path;if(a){var c=b.facetTreeConfig.getFacetConfig();d=new facete.FacetValueService(b.sparqlService,c,5e6)}},f=function(){var a=b.path;return d&&a?void d.prepareTableService(b.path,!0).then(function(d){var e=null,f=10,g=(b.pagination.currentPage-1)*f,h=d.fetchCount(e),i=d.fetchItems(e,f,g);c.when(h).then(function(a){b.pagination.totalItems=a.count}),c.when(i).then(function(c){var d=c.map(function(a){var c=a.val.labelInfo={};c.displayLabel=""+a.key;var d=b.path;return a.val.node=a.key,a.val.path=d,a.val.tags={},a.val}),e=b.facetTreeConfig.getFacetConfig().getConstraintManager(),f=e.getConstraintsByPath(a),g={};f.forEach(function(a){"equals"===a.getName()&&(g[a.getValue()]=!0)}),d.forEach(function(a){var b=g[""+a.node];a.tags.isConstrainedEqual=b}),b.facetValues=d})}):(b.totalItems=0,void(b.facetValues=[]))},g=function(){e(),f()};b.ObjectUtils=jassa.util.ObjectUtils;var h='[ObjectUtils.hashCode(facetTreeConfig), "" + path, pagination.currentPage]';b.$watch(h,function(){g()},!0),b.$watch("sparqlService",function(){g()}),b.toggleConstraint=function(a){var c=b.facetTreeConfig.getFacetConfig().getConstraintManager(),d=b.path,e=a.node,f=new jassa.facete.ConstraintEquals(d,e);c.toggleConstraint(f)},b.filterTable=function(a){b.filterText=a,g()}}]).directive("facetValueList",function(){return{restrict:"EA",replace:!0,templateUrl:"template/facet-value-list/facet-value-list.html",transclude:!1,require:"facetValueList",scope:{sparqlService:"=",facetTreeConfig:"=",path:"=",onSelect:"&select"},controller:"FacetValueListCtrl"}}),angular.module("ui.jassa.jassa-list-browser",[]).directive("jassaListBrowser",function(){return{restrict:"EA",replace:!0,scope:{listService:"=",filter:"=",limit:"=",offset:"=",totalItems:"=",items:"=",maxSize:"=",langs:"=",availableLangs:"=",doFilter:"=",searchModes:"=",activeSearchMode:"=",context:"="},templateUrl:"template/jassa-list-browser/jassa-list-browser.html"}}),angular.module("ui.jassa.jassa-media-list",[]).controller("JassaMediaListCtrl",["$scope","$q","$timeout",function(a,b,c){a.currentPage=1,a.doRefresh=function(){b.when(a.listService.fetchCount(a.filter)).then(function(b){c(function(){a.totalItems=b.count})}),b.when(a.listService.fetchItems(a.filter,a.limit,a.offset)).then(function(b){c(function(){a.items=b.map(function(a){return a.val})})})},a.$watch("offset",function(){a.currentPage=Math.floor(a.offset/a.limit)+1}),a.$watch("currentPage",function(){a.offset=(a.currentPage-1)*a.limit}),a.$watch("[filter, limit, offset, refresh]",a.doRefresh,!0),a.$watch("listService",a.doRefresh)}]).directive("jassaMediaList",[function(){return{restrict:"EA",templateUrl:"template/jassa-media-list/jassa-media-list.html",transclude:!0,replace:!0,scope:{listService:"=",filter:"=",limit:"=",offset:"=",totalItems:"=",items:"=",maxSize:"=",refresh:"=",context:"="},controller:"JassaMediaListCtrl",link:function(a,b,c,d,e){e(a,function(a){var c=b.find("ng-transclude"),d=c.parent();c.remove(),d.append(a)})}}}]),angular.module("ui.jassa.lang-select",["ui.sortable","ui.keypress","ngSanitize"]).controller("LangSelectCtrl",["$scope",function(a){a.newLang="",a.showLangInput=!1;var b=!1;a.sortConfig={placeholder:"lang-sortable-placeholder",receive:function(){b=!1},over:function(){b=!1},out:function(){b=!0},beforeStop:function(c,d){if(b===!0){var e=d.item.context.textContent;if(e){e=e.trim();var f=a.langs.indexOf(e);a.langs.splice(f,1),d.item.remove()}}},stop:function(){a.$$phase||a.$apply()}},a.getLangSuggestions=function(){var b,c=a.availableLangs;return b=c?Array.isArray(c)?c:c instanceof Function?c():[]:[]},a.confirmAddLang=function(b){var c=a.langs.indexOf(b);0>c&&a.langs.push(b),a.showLangInput=!1,a.newLang=""}}]).directive("langSelect",function(){return{restrict:"EA",replace:!0,templateUrl:"template/lang-select/lang-select.html",scope:{langs:"=",availableLangs:"="},controller:"LangSelectCtrl"}}),angular.module("ui.jassa.list-search",[]).controller("ListSearchCtrl",["$scope",function(a){a.setActiveSearchMode=function(b){a.activeSearchMode=b}}]).directive("listSearch",function(){return{restrict:"EA",scope:{searchModes:"=",activeSearchMode:"=",ngModel:"=",onSubmit:"&submit"},controller:"ListSearchCtrl",templateUrl:"template/list-search/list-search.html"}}),angular.module("ui.jassa.pointer-events-scroll-fix",[]).directive("pointerEventsScrollFix",function(){return{restrict:"A",compile:function(){return{post:function(a,b){jQuery.fn.hasScrollBar||(jQuery.fn.hasScrollBar=function(){var a=this.get(0);if(!a)return console.log("Should not happen"),!1;var b=a.scrollHeight>a.clientHeight||a.scrollWidth>a.clientWidth;return b});var c=null;a.$watch(function(){return jQuery(b).hasScrollBar()},function(a){console.log("Scrollbar state: ",a,c),a?c||(c=b.css("pointer-events"),b.css("pointer-events","auto")):c&&(b.css("pointer-events",c),c=null)})}}}}}),angular.module("ui.jassa.resizable",[]).directive("resizable",function(){return{restrict:"A",scope:{resizable:"=",onResize:"&onResize",onResizeInit:"&onResizeInit",bounds:"="},compile:function(){return{post:function(a,b){a.bounds||(a.bounds={});var c=!1,d=function(a){c&&jQuery(b).resizable("destroy"),jQuery(b).resizable(a),c=!0},e=["top","bottom","width","height"],f=function(a){var c=b.prop("style"),d=_(c).pick(a);return d},g=function(a){_(a).each(function(a,c){b.css(c,a)})},h=f(e);angular.copy(h,a.bounds),a.onResizeInit&&a.onResizeInit({bounds:h});var i=function(a){g(a)};a.$watch("bounds",i,!0),jQuery(b).on("resizestop",function(b,c){var d=f(e);angular.copy(d,a.bounds),a.onResize&&a.onResize(b,c,d),a.$$phase||a.$apply()}),a.$watch("resizable",d)}}}}}),angular.module("ui.jassa.sparql-grid",[]).controller("SparqlGridCtrl",["$scope","$rootScope","$q",function(a,b,c){var d=(jassa.rdf,jassa.sparql,jassa.service),e=jassa.util,f=(jassa.sponate,jassas.facete),g=function(a,b){for(var c=[],d=0;d<a.fields.length;++d){var g=a.fields[d],h=a.directions[d],i=0;if("asc"===h?i=1:"desc"===h&&(i=-1),0!==i){var j=new f.SortCondition(g,i);c.push(j)}}var k=b.getSortConditions(),l=_(c).isEqual(k);l||e.ArrayUtils.replace(k,c)},h=function(){var b=a.config,c=a.sparqlService,e=b?b.queryFactory:null,f=e?e.createQuery():null,g=new d.SparqlTableService(c,f);return g};a.$watch("gridOptions.sortInfo",function(b){var c=a.config,d=c?c.tableMod:null;null!=d&&g(b,d),a.refreshData()},!0),a.$watch("[pagingOptions, filterOptions]",function(){a.refreshData()},!0);var i=function(){a.refresh()};a.ObjectUtils=e.ObjectUtils,a.$watch("[ObjectUtils.hashCode(config), disableRequests]",function(){i()},!0),a.$watch("sparqlService",function(){i()}),a.totalServerItems=0,a.pagingOptions={pageSizes:[10,50,100],pageSize:10,currentPage:1},a.refresh=function(){var b=h();return a.disableRequests?void e.ArrayUtils.clear(a.myData):(a.refreshSchema(b),a.refreshPageCount(b),void a.refreshData(b))},a.refreshSchema=function(b){b=b||h();var c=a.colDefs,d=b.getSchema(),e=_(d).isEqual(c);e||(a.colDefs=d)},a.refreshPageCount=function(b){b=b||h();var d=b.fetchCount();jassa.sponate.angular.bridgePromise(d,c.defer(),a,function(b){a.totalServerItems=b.count})},a.refreshData=function(b){b=b||h();var d=a.pagingOptions.currentPage,e=a.pagingOptions.pageSize,f=(d-1)*e,g=b.fetchData(e,f);jassa.sponate.angular.bridgePromise(g,c.defer(),a,function(b){var c=_(b).isEqual(a.myData);c||(a.myData=b)})};var j=[];if(ngGridFlexibleHeightPlugin){var k=ngGridFlexibleHeightPlugin;j.push(new k(30))}a.myData=[],a.gridOptions={data:"myData",enablePaging:!0,useExternalSorting:!0,showFooter:!0,totalServerItems:"totalServerItems",enableHighlighting:!0,sortInfo:{fields:[],directions:[],columns:[]},pagingOptions:a.pagingOptions,filterOptions:a.filterOptions,plugins:j,columnDefs:"colDefs"}}]).directive("sparqlGrid",["$parse",function(){return{restrict:"EA",replace:!0,templateUrl:"template/sparql-grid/sparql-grid.html",controller:"SparqlGridCtrl",scope:{sparqlService:"=",config:"=",disableRequests:"=",onSelect:"&select",onUnselect:"&unselect"},link:function(){}}}]),angular.module("ui.jassa.template-list",[]).controller("TemplateListCtrl",["$scope",function(){}]).directive("templateList",["$compile",function(a){return{restrict:"EA",replace:!0,templateUrl:"template/template-list/template-list.html",transclude:!0,scope:{templates:"=",data:"=",context:"="},controller:"TemplateListCtrl",compile:function(){return{pre:function(b,c){angular.forEach(b.templates,function(d){var e=a('<li style="display: inline;"></li>')(b),f=a(d)(b);e.append(f),c.append(e)})}}}}}]),angular.module("template/constraint-list/constraint-list.html",[]).run(["$templateCache",function(a){a.put("template/constraint-list/constraint-list.html",'<ul>\n  	<li ng-show="constraints.length == 0" style="color: #aaaaaa;">(no constraints)</li>\n   	<li ng-repeat="constraint in constraints"><a href="" ng-click="removeConstraint(constraint)" ng-bind-html="constraint.label"></a></li>\n</ul>\n')}]),angular.module("template/facet-tree/facet-dir-content.html",[]).run(["$templateCache",function(a){a.put("template/facet-tree/facet-dir-content.html",'<!-- ng-show="dirset.pageCount > 1 || dirset.children.length > 5" -->\n\n\n<!--                 		<div ng-show="dirset.pageCount != 1" style="width:100%; background-color: #eeeeff"> -->\n<!--     		         		<pagination style="padding-left: {{16 * (dirset.path.getLength() + 1)}}px" class="pagination-tiny" max-size="7" total-items="dirset.childFacetCount" page="dirset.pageIndex" boundary-links="true" rotate="false" on-select-page="selectFacetPage(page, facet)" first-text="<<" previous-text="<" next-text=">" last-text=">>"></pagination> -->\n<!--                 		</div> -->\n\n<span ng-show="dirset.children.length == 0"\n    style="color: #aaaaaa; padding-left: 16px">(no\n    entries)</span>\n\n<div style="padding-left: 16px"\n    ng-repeat="facet in dirset.children track by facet.path"\n    ng-include="\'template/facet-tree/facet-tree-item.html\'" ></div>\n\n\n')}]),angular.module("template/facet-tree/facet-dir-ctrl.html",[]).run(["$templateCache",function(a){a.put("template/facet-tree/facet-dir-ctrl.html",'<div style="width: 100%; background-color: #eeeeff;">\n    <div style="padding-right: 16px; padding-left: 16px">\n\n        <form class="form-inline" role="form" ng-submit="doFilter(dirset.pathHead, dirset.listFilter.concept)">\n\n            <div class="form-group">\n                <div class="input-group">\n                    <input type="text" class="form-control input-sm" placeholder="Filter" ng-model="dirset.listFilter.concept" ng-change="doFilter(dirset.pathHead, dirset.listFilter.concept)"/>\n                    <span class="input-group-btn">\n                        <button type="submit" class="btn btn-default input-sm">Filter</button>\n                    </span>\n                    <span class="input-group-btn">\n                        <select class="btn btn-default input-sm" ng-model="dirset.listFilter.limit" ng-options="item for item in itemsPerPage"></select>\n                    </span>\n                </div>\n<!--                 <div class="input-group"> -->\n<!--                     <select class="form-control input-sm" ng-model="dirset.limit" ng-options="item for item in itemsPerPage"></select> -->\n<!--                 </div> -->\n            </div>\n\n\n        </form>\n    </div>\n</div>\n\n')}]),angular.module("template/facet-tree/facet-tree-item.html",[]).run(["$templateCache",function(a){a.put("template/facet-tree/facet-tree-item.html",'<div ng-class="{\'frame\': facet.isExpanded}">\n\n<div style="width: 100%" ng-controller="FacetNodeCtrl">\n    <div class="facet-row visible-on-hover-parent" ng-class="{\'highlite\': facet.isExpanded}">\n        <a ng-class="facet.isExpanded ? \'\' : \'visible-on-hover-child\'" href="" ng-click="toggleCollapsed(facet.path)"><span class="glyphicon" ng-class="facet.isExpanded ? \'glyphicon-chevron-down\' : \'glyphicon-chevron-right\'"></span></a>\n\n        <a href="" title="Showing incoming facets. Click to show outgoing facets." ng-if="facet.isExpanded && facet.incoming" ng-click="selectOutgoing(facet.path)"><span class="glyphicon glyphicon-arrow-left"></span></a>\n        <a href="" title="Showing outgoing facets. Click to show incoming facets." ng-if="facet.isExpanded && facet.outgoing" ng-click="selectIncoming(facet.path)"><span class="glyphicon glyphicon-arrow-right"></span></a>\n\n\n        <a title="{{facet.property.getUri()}}" href="" ng-click="onSelect({path: facet.path})">{{facet.labelInfo.displayLabel || facet.property.getUri()}}</a>\n\n        <small><span style="color: gray;" ng-bind-html="(!facet.valueCountInfo || facet.valueCountInfo.hasMoreItems) ? \'&#8230;\' : (\'\' + facet.valueCountInfo.count)"></span></small>\n\n        <a style="margin-left: 5px; margin-right: 5px;" ng-class="!facet.isExpanded ? \'hide\' : { \'visible-on-hover-child\': !facet.tags.showControls }" href="" ng-click="toggleControls(facet.path)"><span class="glyphicon glyphicon-cog"></span></a>\n\n        <a style="margin-left: 5px; margin-right: 5px;" ng-class="{ \'visible-on-hover-child\': !isEqual(facet.path, startPath) }" href="" ng-click="setStartPath(facet.path)"><span class="glyphicon glyphicon-pushpin"></span></a>\n\n\n        <template-list style="list-style:none; display: inline; padding-left: 0px;" templates="plugins" data="facet" context="pluginContext"></template-list>\n\n        <div style="display: inline" ng-if="dirset.pageCount > 1" style="background-color: #eeeeff">\n            <pagination\n                style="padding-left: 16px"\n                class="pagination-tiny pagination-inline"\n                max-size="7"\n                total-items="dirset.childCountInfo.count"\n                page="dirset.currentPage"\n                boundary-links="true"\n                rotate="false"\n                on-select-page="selectPage(dirset.pathHead, page)"\n                first-text="<<"\n                previous-text="<"\n                next-text=">"\n                last-text=">>"\n            ></pagination>\n        </div>\n\n<!--         <span style="float: right" class="badge" ng-bind-html="(!facet.valueCountInfo || facet.valueCountInfo.hasMoreItems) ? \'&#8230;\' : (\'\' + facet.valueCountInfo.count)"></span> -->\n\n        <div ng-if="facet.isExpanded && facet.tags.showControls && facet.incoming" style="width:100%" ng-repeat="dirset in [facet.incoming] track by dirset.pathHead" ng-include="\'template/facet-tree/facet-dir-ctrl.html\'"></div>\n        <div ng-if="facet.isExpanded && facet.tags.showControls && facet.outgoing" style="width:100%" ng-repeat="dirset in [facet.outgoing] track by dirset.pathHead" ng-include="\'template/facet-tree/facet-dir-ctrl.html\'"></div>\n    </div>\n\n    <div ng-if="facet.isExpanded" style="width:100%">\n\n<!--         <div ng-if="facet.isExpanded && facet.incoming" ng-repeat="dirset in [facet.incoming]" ng-include="\'template/facet-tree/facet-dir-content.html\'"></div> -->\n<!--         <div ng-if="facet.isExpanded && facet.outgoing" ng-repeat="dirset in [facet.outgoing]" ng-include="\'template/facet-tree/facet-dir-content.html\'"></div> -->\n\n        <div ng-if="facet.isExpanded && facet.incoming" ng-include="\'template/facet-tree/facet-dir-content.html\'"></div>\n        <div ng-if="facet.isExpanded && facet.outgoing" ng-include="\'template/facet-tree/facet-dir-content.html\'"></div>\n\n    </div>\n\n</div>\n</div>\n')}]),angular.module("template/facet-value-list/facet-value-list.html",[]).run(["$templateCache",function(a){a.put("template/facet-value-list/facet-value-list.html",'<div class="frame">\n    <form ng-submit="filterTable(filterText)">\n        <input type="text" ng-model="filterText" />\n        <input class="btn-primary" type="submit" value="Filter" />\n    </form>\n\n    <ul style="list-style: none;">\n        <li ng-repeat="item in facetValues">\n            <a href="" ng-click="toggleConstraint(item)">\n                <span style="padding: 1px" ng-style="item.tags.isConstrainedEqual && { \'background-color\': \'#428bca\', \'color\': \'white\', \'border-radius\': \'.25em;\' }" title="{{item.node}}">{{item.labelInfo.displayLabel || item.node}}</span>\n            </a>\n        </li>\n    </ul>\n<!--     <table> -->\n<!--               <tr><th>Value</th><th>Constrained</th></tr> -->\n<!--         <tr ng-repeat="item in facetValues"> -->\n<!--                   <td><span title="{{item.node}}">{{item.labelInfo.displayLabel || item.node}}</span></td> -->\n<!--                   <td><input type="checkbox" ng-model="item.tags.isConstrainedEqual" ng-change="toggleConstraint(item)" /></td> -->\n<!--               </tr> -->\n<!--           </table> -->\n          <pagination class="pagination-small" total-items="pagination.totalItems" page="pagination.currentPage" max-size="pagination.maxSize" boundary-links="true" rotate="false" num-pages="pagination.numPages" previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;"></pagination>\n</div>\n')}]),angular.module("template/jassa-list-browser/jassa-list-browser.html",[]).run(["$templateCache",function(a){a.put("template/jassa-list-browser/jassa-list-browser.html",'<div class="container">\n    <div class="row">\n        <div class="col-md-12">\n\n            <div class="alert alert-success" role="alert">\n\n                <list-search ng-model="searchString" submit="doFilter(searchString)" search-modes="searchModes" active-search-mode="activeSearchMode"></list-search>\n                <div>\n                    <ul class="list-inline">\n                        <li><span>Language Settings: </span></li>\n                        <li><lang-select langs="langs" available-langs="availableLangs"></lang-select></li>\n                    </ul>\n                </div>\n\n                <div>\n                    <strong>Found <span class="badge">{{totalItems}}</span> items</strong>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div class="row">\n\n        <div class="col-md-12">\n\n            <jassa-media-list list-service="listService" offset="offset" limit="limit" max-size="maxSize" filter="filter" total-items="totalItems" items="items" refresh="langs" context="context">\n                <ng-include src="context.itemTemplate"></ng-include>\n            </jassa-media-list>\n\n        </div>\n    </div>\n\n</div>\n')}]),angular.module("template/jassa-media-list/jassa-media-list.html",[]).run(["$templateCache",function(a){a.put("template/jassa-media-list/jassa-media-list.html",'<div style="width: 100%">\n\n    <div style="width: 100%; text-align: center">\n        <pagination\n            ng-show="items.length"\n            class="pagination"\n            ng-model="currentPage"\n            page="currentPage"\n            items-per-page="limit"\n            total-items="totalItems"\n            max-size="maxSize"\n            boundary-links="true"\n            rotate="false"\n            first-text="&lt;&lt;"\n            previous-text="&lt;"\n            next-text="&gt;"\n            last-text="&gt;&gt;"\n        ></pagination>\n    </div>\n\n    <ul class="media-list" style="width: 100%;">\n        <ng-transclude></ng-transclude>\n    </ul>\n\n    <div style="width: 100%; text-align: center">\n        <pagination\n            ng-show="items.length"\n            class="pagination"\n            ng-model="currentPage"\n            page="currentPage"\n            items-per-page="limit"\n            total-items="totalItems"\n            max-size="maxSize"\n            boundary-links="true"\n            rotate="false"\n            first-text="&lt;&lt;"\n            previous-text="&lt;"\n            next-text="&gt;"\n            last-text="&gt;&gt;"\n        ></pagination>\n    </div>\n</div>\n')}]),angular.module("template/lang-select/lang-select.html",[]).run(["$templateCache",function(a){a.put("template/lang-select/lang-select.html",'<ul class="list-inline">\n    <li>\n        <ul ui-sortable="sortConfig" ng-model="langs" class="list-inline">\n            <li class="lang-item" ng-repeat="lang in langs"><span class="label label-success preserve-whitespace">{{lang.length ? lang : \'  \'}}</span></li>\n        </ul>\n    </li>\n    <li ng-show="showLangInput">\n        <form ng-submit="confirmAddLang(newLang)" ui-keydown="{esc: \'showLangInput=false\'}">\n            <input auto-focus="focusLangInput" size="4" ng-model="newLang" type="text" class="lang-borderless" typeahead="lang for lang in getLangSuggestions() | filter:$viewValue | limitTo:8">\n            <button type="submit" style="cursor: pointer;" class="btn label label-info""><span class="glyphicon glyphicon-ok"></span></button>\n            <button type="reset" style="cursor: pointer;" class="btn label label-warning" ng-click="showLangInput=false"><span class="glyphicon glyphicon-remove"></span></button>\n        </form>\n    </li>\n    <li>\n        <button type="button" ng-show="!showLangInput" style="cursor: pointer;" class="btn label label-primary" ng-click="showLangInput=true; focusLangInput=true"><span class="glyphicon glyphicon-plus"></span></button>\n    </li>\n<ul>\n\n')}]),angular.module("template/list-search/list-search.html",[]).run(["$templateCache",function(a){a.put("template/list-search/list-search.html",'<form role="form" ng-submit="onSubmit()" novalidate>\n    <div class="form-group">\n        <div class="input-group">\n            <input\n                ng-model="ngModel"\n                type="text"\n                class="form-control"\n                placeholder="Find ...">\n\n            <div class="input-group-btn">\n                <button type="button" class="btn btn-default dropdown-toggle no-border-radius" style="margin-left: -1px; margin-right: -1px;" data-toggle="dropdown">{{activeSearchMode.label}} <span class="caret"></span></button>\n                <ul class="dropdown-menu dropdown-menu-right" role="menu">\n                    <li ng-repeat="searchMode in searchModes"><a ng-click="setActiveSearchMode(searchMode)" href="#"><span bind-html-unsafe="searchMode.label"></span></a></li>\n                </ul>\n            </div>\n\n            <span class="input-group-btn">\n                <button type="submit" class="btn btn-default" type="button"><span class="glyphicon glyphicon-search"></span></button>\n            </span>\n        </div>\n    </div>\n</form>\n\n')
}]),angular.module("template/sparql-grid/sparql-grid.html",[]).run(["$templateCache",function(a){a.put("template/sparql-grid/sparql-grid.html",'<div>\n<div ng-grid="gridOptions"></div>\n</div>\n')}]),angular.module("template/template-list/template-list.html",[]).run(["$templateCache",function(a){a.put("template/template-list/template-list.html",'<ul ng-show="templates.length > 0">\n</ul>')}]);